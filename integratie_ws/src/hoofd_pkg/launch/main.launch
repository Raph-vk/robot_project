<launch>
  <!-- 
    Alle systeem Launches:
      1) Noodstop script
      2) hoofdprogramma script
      10) HMI-webserver
      11) rosserial_python serial_node.py for Arduino ↔ ROS communication
      12) controller_transportsystem.py for IR‐sensor → motor logic
      13) MoveIt! planning execution launch
      14) Start manipulator_node.py
      15) Launch vision application
  -->

  <!-- 1) Start de Flask-HMI (open on the web: http://localhost:5000/) -->
  <node pkg="hoofd_pkg"
        type="hoofdprogramma.py"
        name="hoofdprogram_node"
        output="screen"/>


  <!-- 2) Start de Flask-HMI (open on the web: http://localhost:5000/) -->
  <node pkg="hoofd_pkg"
        type="emergency.py"
        name="emergency_node"
        output="screen"/>

  <!-- 11) Start rosserial to connect to the Arduino -->
  <node
    name="arduino_node"
    pkg="rosserial_python"
    type="serial_node.py"
    output="screen">
    <!-- Serial port to which the Arduino is connected -->
    <param name="port" value="/dev/ttyACM0" />
    <!-- Must match the baudrate in your Arduino sketch -->
    <param name="baud" value="57600" />
  </node>

  <!-- 12) Launch your IR‐motor controller node -->
  <node
    name="system_control_node"
    pkg="transportsysteem_pkg"
    type="controller_transportsystem.py"
    output="screen">
    <!-- If you want to remap topics or add params, do it here. Example:
    <remap from="/motor_command" to="/my_motor_topic"/>
    <param name="some_param" value="123"/>
    -->
  </node>

  <!-- 13) Start de MoveIt! Planning Execution met de robot description -->
  <include file="$(find my_lite6_moveit_config)/launch/demo.launch"/>

  <!-- 14) Start manipulator_node.py -->
  <node name="manipulator_node" pkg="robotarm" type="manipulator.py" output="screen" />

  <!-- 15) Launch vision_appplicatie-->
  <include file="$(find my_depthai)/launch/nn_detector.launch">
    <arg name="enableRviz" value="false" />
  </include>  

</launch>
